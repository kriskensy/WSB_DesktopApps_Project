<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:MVVMFirma.ViewModels"
                    xmlns:vw="clr-namespace:MVVMFirma.Views"
                    xmlns:equipment="clr-namespace:MVVMFirma.Views.Equipment"
                    xmlns:certifications="clr-namespace:MVVMFirma.Views.Certifications"
                    xmlns:dives="clr-namespace:MVVMFirma.Views.Dives"
                    xmlns:general="clr-namespace:MVVMFirma.Views.General"
                    xmlns:vm1="clr-namespace:MVVMFirma.ViewModels.Certifications"
                    xmlns:dives1="clr-namespace:MVVMFirma.ViewModels.Dives"
                    xmlns:equipment1="clr-namespace:MVVMFirma.ViewModels.Equipment"
                    xmlns:general1="clr-namespace:MVVMFirma.ViewModels.General">
    
    <DataTemplate DataType="{x:Type general1:AllUsersViewModel}">
        <general:AllUsersView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type general1:NewUsersViewModel}">
        <general:NewUsersView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type general1:AllBuddysViewModel}">
        <general:AllBuddysView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type general1:NewBuddysViewModel}">
        <general:NewBuddysView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm1:AllCertificatesViewModel}">
        <certifications:AllCertificatesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm1:NewCertificatesViewModel}">
        <certifications:NewCertificatesView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm1:AllCertificationOrganizationViewModel}">
        <certifications:AllCertificationOrganizationView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm1:NewCertificationOrganizationViewModel}">
        <certifications:NewCertificationOrganizationView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type dives1:AllDiveConditionsViewModel}">
        <dives:AllDiveConditionsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type dives1:NewDiveConditionsViewModel}">
        <dives:NewDiveConditionsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type dives1:AllDiveLogsViewModel}">
        <dives:AllDiveLogsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type dives1:NewDiveLogsViewModel}">
        <dives:NewDiveLogsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type dives1:AllDiveSitesViewModel}">
        <dives:AllDiveSitesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type dives1:NewDiveSitesViewModel}">
        <dives:NewDiveSitesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type dives1:AllDiveStatisticViewModel}">
        <dives:AllDiveStatisticView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type dives1:NewDiveStatisticViewModel}">
        <dives:NewDiveStatisticView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type dives1:AllDiveTypesViewModel}">
        <dives:AllDiveTypesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type dives1:NewDiveTypesViewModel}">
        <dives:NewDiveTypesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type general1:AllEmergencyContactsViewModel}">
        <general:AllEmergencyContactsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type general1:NewEmergencyContactsViewModel}">
        <general:NewEmergencyContactsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type equipment1:AllEquipmentCategoriesViewModel}">
        <vw:AllEquipmentCategoriesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type equipment1:NewEquipmentCategoriesViewModel}">
        <equipment:NewEquipmentCategoriesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type equipment1:AllEquipmentManufacturerViewModel}">
        <equipment:AllEquipmentManufacturerView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type equipment1:NewEquipmentManufacturerViewModel}">
        <equipment:NewEquipmentManufacturerView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type equipment1:AllEquipmentViewModel}">
        <equipment:AllEquipmentView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type equipment1:NewEquipmentViewModel}">
        <equipment:NewEquipmentView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type equipment1:AllMaintenanceScheduleViewModule}">
        <equipment:AllMaintenanceScheduleView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type equipment1:NewMaintenanceScheduleViewModel}">
        <equipment:NewMaintenanceScheduleView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type dives1:AllTypeOfTrainingViewModel}">
        <dives:AllTypeOfTrainingView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type dives1:NewTypeOfTrainingViewModel}">
        <dives:NewTypeOfTrainingView/>
    </DataTemplate>

    <!--TODO: odkomentuj poniższy kod i popraw błędy-->
    <!--<DataTemplate DataType="{x:Type reports1:DiveDepthReportViewModel}">
        <reports:DiveDepthReportView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type reports1:DiveDurationReportViewModel}">
        <reports:DiveDurationReportView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type reports1:EquipmentCategoryReportViewModel}">
        <reports:EquipmentCategoryReportView/>
    </DataTemplate>-->

    <Style TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="Blue" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2,6">
            <Hyperlink Command="{Binding Path=Command}">
              <TextBlock Text="{Binding Path=DisplayName}" />
            </Hyperlink>
          </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>
</ResourceDictionary>